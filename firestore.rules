rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read their own profile and public user profiles
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Username uniqueness check
    match /usernames/{username} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // Posts can be read by anyone, written by authenticated users
    match /posts/{postId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.authorId || 
         request.auth.uid in resource.data.likedBy);
      allow delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }
    
    // Communities can be read by anyone, created by authenticated users
    match /communities/{communityId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == resource.data.createdBy;
      allow delete: if request.auth != null && request.auth.uid == resource.data.createdBy;
    }
    
    // Messages can only be read/written by participants
    match /messages/{messageId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
    }
    
    // Conversations can only be read/written by participants
    match /conversations/{conversationId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
    }
  }
} 